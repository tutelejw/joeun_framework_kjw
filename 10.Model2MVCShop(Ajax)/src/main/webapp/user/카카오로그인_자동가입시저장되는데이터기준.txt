자동 가입 시 어떤 정보가 어떤 기준으로 저장되는지, 그리고 어떤 정보를 추가로 가져올 수 있는지 명확히 짚어드리겠습니다.

## 1. ID와 PW는 어떻게 저장되나요?
현재 UserController의 자동 가입 로직을 기준으로, DB에 저장되는 기준은 다음과 같습니다.

user_id (아이디)
저장 기준: 카카오가 부여하는 사용자의 고유한 회원번호(ID)

설명: kakaoUserInfo.get("id")를 통해 얻어오는 값으로, 4482774335와 같은 긴 숫자 형태입니다. 이 값은 해당 사용자를 평생 유일하게 식별하는 값이므로, 우리 서비스에서 소셜 로그인 유저를 구분하는 기본 키(Primary Key)로 사용하기에 가장 적합합니다.

password (비밀번호)
저장 기준: 아이디와 동일하게 카카오 회원번호(ID)를 저장

설명: 소셜 로그인 사용자는 우리 사이트 고유의 비밀번호가 없습니다. 하지만 DB의 users 테이블에 password 컬럼이 NOT NULL과 같이 필수값으로 설정되어 있을 가능성이 높습니다. 이 제약조건을 만족시키기 위한 **임시값(placeholder)**으로, 식별자인 userId를 그대로 넣어준 것입니다.

이 비밀번호는 실제 로그인 검증에 사용되지 않으므로 보안상 안전하며, 소셜 로그인 시 흔히 사용되는 방식입니다.

## 2. 어떤 추가 정보를 가져올 수 있나요?
카카오로부터 다양한 추가 정보를 가져올 수 있지만, 이를 위해서는 사전 설정이 반드시 필요합니다.

⭐ 중요: 동의항목 설정
먼저 카카오 개발자 사이트에서 우리 서비스가 어떤 정보를 사용자에게 요청할지 설정해야 합니다.

카카오 개발자 사이트 접속

내 애플리케이션 → [앱 이름] → 제품 설정 → 카카오 로그인 메뉴로 이동합니다.

동의항목 탭을 클릭합니다.

여기서 가져오고 싶은 정보(예: 성별, 연령대)의 상태를 **'선택 동의'**로 설정하고 저장합니다.

이렇게 설정해야만 사용자가 로그인할 때 해당 정보를 제공할지 묻는 동의 화면이 나타나고, 동의한 사용자에 한해 정보를 얻을 수 있습니다.

✅ 가져올 수 있는 주요 정보 목록
항목	필드 경로 (JSON)	설명
프로필 이미지	kakao_account.profile.profile_image_url	640x640 사이즈의 원본 프로필 이미지 URL
썸네일 이미지	kakao_account.profile.thumbnail_image_url	110x110 사이즈의 썸네일 이미지 URL
성별	kakao_account.gender	"male"(남성) 또는 "female"(여성)
연령대	kakao_account.age_range	"20~29" 와 같은 문자열
생일	kakao_account.birthday	"MMDD" 형식의 생일 (예: "0901")
출생 연도	kakao_account.birthyear	"YYYY" 형식의 출생 연도 (예: "2000")

Sheets로 내보내기
## 3. 코드 수정 예시 (성별, 연령대 추가)
만약 **'성별'**과 '연령대' 정보를 DB에 추가로 저장하고 싶다면, 먼저 User 도메인 객체와 users 테이블에 해당 컬럼(예: gender, age_range)을 추가한 후, UserController의 자동 가입 로직을 아래와 같이 수정하면 됩니다.

UserController.java

Java

// ...
if (user == null) {
    System.out.println("5. 비회원 확인. 자동 회원가입을 시작합니다.");
    user = new User();
    user.setUserId(kakaoId);
    
    Map<String, Object> kakaoAccount = (Map<String, Object>) kakaoUserInfo.get("kakao_account");
    Map<String, Object> profile = (Map<String, Object>) kakaoAccount.get("profile");
    
    user.setUserName((String) profile.get("nickname"));
    
    if (kakaoAccount.get("email") != null) {
        user.setEmail((String) kakaoAccount.get("email"));
    }
    
    // ▼▼▼ [추가된 부분] ▼▼▼
    // 사용자가 성별 정보 제공에 동의했는지 확인
    if (kakaoAccount.get("gender") != null) {
        user.setGender((String) kakaoAccount.get("gender")); // User 객체에 setGender가 있다고 가정
    }
    
    // 사용자가 연령대 정보 제공에 동의했는지 확인
    if (kakaoAccount.get("age_range") != null) {
        user.setAgeRange((String) kakaoAccount.get("age_range")); // User 객체에 setAgeRange가 있다고 가정
    }
    // ▲▲▲ [추가된 부분] ▲▲▲

    user.setPassword(kakaoId);
    user.setRole("user");
    userService.addUser(user);
    System.out.println("6. 신규 회원가입 완료: " + user);
}
// ...
if (kakaoAccount.get("필드명") != null) 구문으로 사용자가 정보 제공에 동의했는지 반드시 확인한 후에 값을 가져와야 합니다. 사용자가 동의하지 않으면 해당 필드는 null로 오기 때문입니다.
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper09">

<!-- 
MyBatis에서 사용할 수 있는 UserMapper09.xml 매핑 파일 작성하려고해
테이블 생성 구문으로 매핑구문에서 사용할 resultset과 바이딩될 비지니스 객체 정의해줘, jdbcType 명시해줘
Search.java 와 User.java 도메인객체 참고해줘
mapper에서 사용되는 쿼리는 필드명을 모두 명시해주고 order by로 정렬해줘
item 의 값은 value로 통일해줘
getUserList01 작성 user_id 조회 dynamic sql foreach element collection, array 이용 반복 구문으로 
조건은 userId.size !=0 지정 명시한건만 사용해줘
order by로 정렬 user_id 해줘

getUserList02 작성 user_name( 조회 dynamic sql foreach element collection, array 이용 반복 구문으로 
조건은 userName[0] != null 지정 명시한건만 사용해줘
order by로 정렬 user_id 해줘

getUserList03 작성 user_id( 조회 dynamic sql foreach element collection, array 이용 반복 구문으로 
<where> element는 <trim> element 로 적용해줘
조건은 userId.size !=0 지정 명시한건만 사용해줘
order by로 정렬 user_id 해줘

getUserList04 작성 user_name( 조회 dynamic sql foreach element collection, array 이용 반복 구문으로 
<where> element는 <trim> element 로 적용해줘
조건은 userName[0] != null 지정 명시한건만 사용해줘
order by로 정렬 user_id 해줘



CREATE TABLE users ( 
	user_id		VARCHAR2(12)	PRIMARY KEY,
	user_name	VARCHAR2(15)	NOT NULL,
	password 	VARCHAR2(10)	NOT NULL,
	age 			NUMBER(3),
	grade		NUMBER(3),
	reg_date		DATE
);


package mybatis.service.domain;

import java.io.Serializable;
import java.sql.Timestamp;

/*
 * FileName : User.java  
 * ㅇ User 의 정보를 갖는 Value Object (도메인객체,비지니스객체)
 * ㅇ USERS TABLE 의 1개의 ROW 의 정보를 갖는다.  
*/ 
public class User implements Serializable {

	///Field
    private String userId; 			// 회원 ID 
    private String userName;		// 회원 이름 
    private String password;     // 비밀번호 
    private Integer age;    			// 나이 :: Integer wrapper class 사용 :: 추후 용도 확인  
    private int grade;    				// 등급 :: int primitive 사용 :: :: 추후 용도 확인 
    private Timestamp regDate	; // 가입일자 
    //private Timestamp regDate	= new Timestamp(new Date().getTime()); // 가입일자
    private boolean active; 
    
    ///Constructor
    public User() {
	}
    public User (	String userId, String userName,String password, 
    							Integer age, int grade ) {
		this.userId = userId;
		this.userName = userName;
		this.password = password;
		this.age = age;
		this.grade = grade;
	}    

	///Method (getter/setter)
	public String getUserId(){
		return this.userId;
	}
	public void setUserId( String userId ){
	   this.userId= userId;
	}
	public String getPassword(){
	   return this.password;
	}
	public void setPassword( String password ){
	   this.password= password;
	}
	public Integer getAge() {
		return age;
	}
	public void setAge(Integer age) {
		System.out.println("setAge  호출 확인 null 일때 age : "+age);
		this.age = age;
	}
	public String getUserName() {
		return userName;
	}
	public void setUserName(String userName) {
		this.userName = userName;
	}
	public java.sql.Timestamp getRegDate() {
		return regDate;
	}
	public void setRegDate(java.sql.Timestamp regDate) {
		this.regDate = regDate;
	}
	public int getGrade() {
		return grade;
	}
	public void setGrade(int grade) {
		//System.out.println("grade : "+grade);
		this.grade = grade;
	}
	public void setActive(boolean active) {
		this.active = active;
	}
	public boolean isActive() {
		return active;
	}
	@Override
	public String toString() {
		return "User [userid=" + userId + ", userName=" + userName + ", password="
				+ password + ", age=" + age + ", grade=" + grade+ ", active=" + active
				+ ", regDate=" + regDate + "]";
	}
}//end of class


package mybatis.service.domain;

import java.util.ArrayList;

/*
 * FileName : Search.java
 *   ㅇ Dynamic SQL 구성시  <foreach> elements 를 이용 반복적 구문생성시 전달되는 
 *       Collection List , Array 갖는 ValueObeject  
  */
public class Search {
	///Field
	private String[] userName;
	private ArrayList<String> userId;
	private String searchCondition;
	
	///Constructor
	public Search() {
	}
	
	///Method
	public String[] getUserName() {
		return userName;
	}
	public void setUserName(String[] userName) {
		this.userName = userName;
	}
	
	public ArrayList<String> getUserId() {
		return userId;
	}
	public void setUserId(ArrayList<String> userId) {
		this.userId = userId;
	}

	public String getSearchCondition() {
		return searchCondition;
	}
	public void setSearchCondition(String searchCondition) {
		this.searchCondition = searchCondition;
	}
}//end of class
 -->

</mapper>

=================================================
PRD : Product Requirement Document : 제품요구서 작성 : ???
--------------------------------------------------
-- 용어에 익숙해지자 
: 구현요구사항을 AI 에 전달 하는 skill 을 익힘.
: 요구사항을 정확히 지시 : Prompt Detail
: 직접 지시가 아니라 AI 와 협업 
   예> 이렇게 하려면 어떻게 해야해 ? 
         : 난 알고 있지만. AI 가 생각하고 해결 할 수 있도록

: Low-code / Prompt Engineering / Ai-assisted coding
=================================================


##### 
0. User Bean 참조

package spring.service.domain;

import java.io.Serializable;

public class User implements Serializable {
	
	///Field
    private String userId; 			/* 회원 ID */
    private String password;     /* 비밀번호 */
    private int age;    					/* 나이 */ 
    
    ///Constructor
    public User() {
		System.out.println("\n::"+getClass().getName()+" 디폴트 생성자....");
	}
	public User(int age, String userId) {
		System.out.println("\n::"+getClass().getName()+" age,userId 인자 받는 생성자....");
		this.age = age;
		this.userId = userId;
	}
	public User(int age, String password, String userId) {
		System.out.println("\n::"+getClass().getName()+"age,password,userId 인자 받는 생성자");
		this.age = age;
		this.password = password;
		this.userId = userId;
	}
	
	///Method (getter/setter)
	public String getUserId(){
		return this.userId;
	}
	public void setUserId( String userId ){
	   System.out.println("::"+getClass().getName()+".setUserId()");
	   this.userId= userId;
	}
	public String getPassword(){
	   return this.password;
	}
	public void setPassword( String password ){
	   System.out.println("::"+getClass().getName()+".setPassword()");		
	   this.password= password;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
        System.out.println("::"+getClass().getName()+".setAge()");
		this.age = age;
	}
	
	@Override
	public String toString() {
		return "User [userId=" + userId + ", password=" + password + ", age="+ age + "]";
	}
	
}//end of class


0. userservice02.prpperties 참조 
    파일 위치 config/userservice02.prpperties
user.userId=08user
user.password=8080
user.age=80


-----------------------------------------------------------------

1. Spring Framework 5.2.5 사용.
2. 아래 내용에 해당하는 userservice02.xml 기술.


- userservice.properties 내용을 참조하여

-  User user08 = new User()   생성후
   아래의 세터 인젝션 수행
    user08.setUserId() 
    user08.setAge()
    user08.setPassword()


#####



<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 1. properties 파일을 읽어서 사용 가능하게 설정 -->
    <context:property-placeholder location="config/userservice02.prpperties"/>

    <!-- 2. User Bean 정의, 프로퍼티 값을 외부에서 주입 -->
    <bean id="user08" class="spring.service.domain.User">
        <property name="userId" value="${user.userId}"/>
        <property name="password" value="${user.password}"/>
        <property name="age" value="${user.age}"/>
    </bean>

</beans>


-----------------------------------------------------------------

1. Spring Framework 5.2.5 사용.
2. 아래 내용에 해당하는 userservice02.xml 기술.


- userservice.properties 내용을 참조하여
  PropertyPlaceholderConfigurer  사용해 주세요.

-  User user08 = new User()   생성후
   아래의 세터 인젝션 수행
    user08.setUserId() 
    user08.setAge()
    user08.setPassword()


#####


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 1. PropertyPlaceholderConfigurer로 properties 파일 로딩 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="config/userservice02.prpperties"/>
    </bean>

    <!-- 2. User Bean 정의 : 프로퍼티 값 세터 인젝션 -->
    <bean id="user08" class="spring.service.domain.User">
        <property name="userId" value="${user.userId}"/>
        <property name="password" value="${user.password}"/>
        <property name="age" value="${user.age}"/>
    </bean>

</beans>


